#include <iostream>
#include <vector>
#include <string>
#include <iomanip> // for std::setprecision

using namespace std;

// Define a Student class to hold student information
class Student {
private:
    string name;
    int age;
    float gpa;

public:
    // Constructor
    Student(string name, int age, float gpa) {
        this->name = name;
        this->age = age;
        this->gpa = gpa;
    }

    // Getters and setters
    string getName() const {
        return name;
    }

    int getAge() const {
        return age;
    }

    float getGpa() const {
        return gpa;
    }

    void setName(string name) {
        this->name = name;
    }

    void setAge(int age) {
        this->age = age;
    }

    void setGpa(float gpa) {
        this->gpa = gpa;
    }

    // Function to display student details
    void display() const {
        cout << "Name: " << name << ", Age: " << age << ", GPA: " << fixed << setprecision(2) << gpa << endl;
    }
};

// Function to display menu options and get user choice
int menu() {
    int choice;
    cout << "\nStudent Management System Menu\n";
    cout << "1. Register a new student\n";
    cout << "2. Display all students\n";
    cout << "3. Update student information\n";
    cout << "4. Delete a student\n";
    cout << "5. Exit\n";
    cout << "Enter your choice: ";
    cin >> choice;
    return choice;
}

int main() {
    vector<Student> students; // Vector to store student objects
    int choice;

    do {
        choice = menu();

        switch (choice) {
            case 1: {
                string name;
                int age;
                float gpa;

                cout << "Enter name: ";
                cin.ignore();
                getline(cin, name);
                cout << "Enter age: ";
                cin >> age;
                cout << "Enter GPA: ";
                cin >> gpa;

                // Create a new student object and add to vector
                students.push_back(Student(name, age, gpa));
                cout << "Student registered successfully.\n";
                break;
            }
            case 2: {
                if (students.empty()) {
                    cout << "No students registered yet.\n";
                } else {
                    cout << "List of students:\n";
                    for (const auto& student : students) {
                        student.display();
                    }
                }
                break;
            }
            case 3: {
                if (students.empty()) {
                    cout << "No students to update.\n";
                } else {
                    string name;
                    int age;
                    float gpa;
                    int index;

                    cout << "Enter index of student to update (0 to " << students.size() - 1 << "): ";
                    cin >> index;

                    if (index < 0 || index >= students.size()) {
                        cout << "Invalid index.\n";
                    } else {
                        cout << "Enter new name: ";
                        cin.ignore();
                        getline(cin, name);
                        cout << "Enter new age: ";
                        cin >> age;
                        cout << "Enter new GPA: ";
                        cin >> gpa;

                        // Update student information
                        students[index].setName(name);
                        students[index].setAge(age);
                        students[index].setGpa(gpa);

                        cout << "Student information updated.\n";
                    }
                }
                break;
            }
            case 4: {
                if (students.empty()) {
                    cout << "No students to delete.\n";
                } else {
                    int index;

                    cout << "Enter index of student to delete (0 to " << students.size() - 1 << "): ";
                    cin >> index;

                    if (index < 0 || index >= students.size()) {
                        cout << "Invalid index.\n";
                    } else {
                        // Erase student from vector
                        students.erase(students.begin() + index);
                        cout << "Student deleted.\n";
                    }
                }
                break;
            }
            case 5: {
                cout << "Exiting program.\n";
                break;
            }
            default:
                cout << "Invalid choice. Please enter a number between 1 and 5.\n";
        }

    } while (choice != 5);

    return 0;
}
